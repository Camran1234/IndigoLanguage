
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.mycompany.indigo;

import com.mycompany.handlers.ComponentCommands;
import com.mycompany.handlers.FormCommands;
import com.mycompany.handlers.UserCommands;
import com.mycompany.handlers.ErrorCommands;
import com.mycompany.formats.ErrorIndigo;
import java.text.SimpleDateFormat;
import com.mycompany.indigo.*;
import java.util.Date;
import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class IndigoSyntax extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return symIndigo.class;
}

  /** Default constructor. */
  @Deprecated
  public IndigoSyntax() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public IndigoSyntax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public IndigoSyntax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\225\000\002\002\004\000\002\002\005\000\002\003" +
    "\005\000\002\004\005\000\002\005\004\000\002\005\003" +
    "\000\002\005\004\000\002\005\004\000\002\053\004\000" +
    "\002\053\003\000\002\006\004\000\002\006\004\000\002" +
    "\051\010\000\002\007\010\000\002\010\010\000\002\011" +
    "\010\000\002\012\003\000\002\012\003\000\002\012\003" +
    "\000\002\013\004\000\002\013\003\000\002\013\004\000" +
    "\002\013\004\000\002\014\004\000\002\014\003\000\002" +
    "\014\004\000\002\014\004\000\002\015\004\000\002\015" +
    "\003\000\002\015\004\000\002\015\004\000\002\016\005" +
    "\000\002\017\006\000\002\017\006\000\002\017\006\000" +
    "\002\017\006\000\002\017\004\000\002\020\005\000\002" +
    "\021\006\000\002\021\006\000\002\021\006\000\002\021" +
    "\006\000\002\021\006\000\002\021\004\000\002\022\005" +
    "\000\002\023\006\000\002\023\004\000\002\024\005\000" +
    "\002\025\006\000\002\025\006\000\002\025\006\000\002" +
    "\025\004\000\002\026\003\000\002\026\003\000\002\026" +
    "\003\000\002\026\003\000\002\027\004\000\002\027\003" +
    "\000\002\027\004\000\002\027\004\000\002\030\004\000" +
    "\002\030\003\000\002\030\004\000\002\030\004\000\002" +
    "\031\005\000\002\032\006\000\002\032\006\000\002\032" +
    "\006\000\002\032\006\000\002\032\006\000\002\032\006" +
    "\000\002\032\006\000\002\032\006\000\002\032\006\000" +
    "\002\032\004\000\002\033\005\000\002\052\006\000\002" +
    "\052\004\000\002\034\005\000\002\035\006\000\002\035" +
    "\006\000\002\035\006\000\002\035\006\000\002\035\006" +
    "\000\002\035\006\000\002\035\006\000\002\035\006\000" +
    "\002\035\004\000\002\036\003\000\002\036\003\000\002" +
    "\036\003\000\002\040\004\000\002\040\003\000\002\040" +
    "\004\000\002\040\004\000\002\037\004\000\002\037\003" +
    "\000\002\037\004\000\002\037\004\000\002\041\003\000" +
    "\002\041\003\000\002\041\003\000\002\041\003\000\002" +
    "\041\003\000\002\041\003\000\002\041\003\000\002\041" +
    "\003\000\002\041\004\000\002\042\005\000\002\043\006" +
    "\000\002\043\006\000\002\043\006\000\002\043\006\000" +
    "\002\043\006\000\002\043\006\000\002\043\006\000\002" +
    "\043\006\000\002\043\006\000\002\043\006\000\002\043" +
    "\006\000\002\043\006\000\002\043\006\000\002\043\006" +
    "\000\002\043\006\000\002\043\004\000\002\044\005\000" +
    "\002\045\012\000\002\045\004\000\002\046\005\000\002" +
    "\047\006\000\002\047\006\000\002\047\006\000\002\047" +
    "\006\000\002\047\006\000\002\047\006\000\002\047\006" +
    "\000\002\047\006\000\002\047\006\000\002\047\006\000" +
    "\002\047\006\000\002\047\006\000\002\047\006\000\002" +
    "\047\006\000\002\047\006\000\002\047\006\000\002\047" +
    "\004\000\002\050\003\000\002\050\003\000\002\050\003" +
    "" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0183\000\006\003\004\064\005\001\002\000\032\003" +
    "\u0177\017\021\020\033\021\042\022\030\023\027\024\022" +
    "\025\013\032\035\033\024\034\014\064\u0179\001\002\000" +
    "\006\004\u0182\006\u017d\001\002\000\006\003\u0177\064\u0179" +
    "\001\002\000\026\017\021\020\033\021\042\022\030\023" +
    "\027\024\022\025\013\032\035\033\024\034\014\001\002" +
    "\000\004\002\012\001\002\000\004\002\ufffc\001\002\000" +
    "\004\002\001\001\002\000\004\065\265\001\002\000\004" +
    "\065\070\001\002\000\010\002\ufff7\003\ufff7\064\ufff7\001" +
    "\002\000\010\002\uffca\003\uffca\064\uffca\001\002\000\010" +
    "\002\uffa9\003\uffa9\064\uffa9\001\002\000\010\002\uffcb\003" +
    "\uffcb\064\uffcb\001\002\000\004\065\043\001\002\000\004" +
    "\065\265\001\002\000\010\002\uff6f\003\uff6f\064\uff6f\001" +
    "\002\000\004\065\070\001\002\000\010\002\ufff1\003\ufff1" +
    "\064\ufff1\001\002\000\010\002\uffa8\003\uffa8\064\uffa8\001" +
    "\002\000\004\065\265\001\002\000\004\065\043\001\002" +
    "\000\010\002\uff6e\003\uff6e\064\uff6e\001\002\000\010\002" +
    "\ufff0\003\ufff0\064\ufff0\001\002\000\004\065\043\001\002" +
    "\000\010\002\uffef\003\uffef\064\uffef\001\002\000\004\065" +
    "\070\001\002\000\010\002\uffa7\003\uffa7\064\uffa7\001\002" +
    "\000\010\002\uffcc\003\uffcc\064\uffcc\001\002\000\010\002" +
    "\uffcd\003\uffcd\064\uffcd\001\002\000\010\002\uff6d\003\uff6d" +
    "\064\uff6d\001\002\000\004\065\043\001\002\000\004\067" +
    "\062\001\002\000\006\003\045\011\046\001\002\000\004" +
    "\070\052\001\002\000\004\066\050\001\002\000\010\002" +
    "\uffd5\003\uffd5\064\uffd5\001\002\000\004\060\051\001\002" +
    "\000\004\070\052\001\002\000\004\072\054\001\002\000" +
    "\010\002\uffd4\003\uffd4\064\uffd4\001\002\000\004\070\055" +
    "\001\002\000\004\064\056\001\002\000\004\007\057\001" +
    "\002\000\004\065\060\001\002\000\014\002\ufff4\003\ufff4" +
    "\063\ufff4\064\ufff4\070\ufff4\001\002\000\010\002\uffd3\003" +
    "\uffd3\064\uffd3\001\002\000\004\010\063\001\002\000\004" +
    "\066\064\001\002\000\004\071\065\001\002\000\004\067" +
    "\066\001\002\000\020\003\ufff5\011\ufff5\012\ufff5\013\ufff5" +
    "\014\ufff5\015\ufff5\016\ufff5\001\002\000\032\003\107\027" +
    "\105\036\101\037\077\040\112\041\110\052\076\053\103" +
    "\054\111\055\104\056\106\074\100\001\002\000\004\067" +
    "\071\001\002\000\004\035\072\001\002\000\004\066\073" +
    "\001\002\000\004\071\074\001\002\000\004\067\075\001" +
    "\002\000\034\003\ufff2\027\ufff2\036\ufff2\037\ufff2\040\ufff2" +
    "\041\ufff2\052\ufff2\053\ufff2\054\ufff2\055\ufff2\056\ufff2\074" +
    "\ufff2\075\ufff2\001\002\000\004\066\202\001\002\000\004" +
    "\066\177\001\002\000\004\066\174\001\002\000\004\066" +
    "\167\001\002\000\010\002\uff95\003\uff95\064\uff95\001\002" +
    "\000\004\066\162\001\002\000\004\066\157\001\002\000" +
    "\004\066\154\001\002\000\004\066\147\001\002\000\010" +
    "\003\127\063\126\070\052\001\002\000\004\066\141\001" +
    "\002\000\004\066\136\001\002\000\004\066\113\001\002" +
    "\000\024\003\122\042\121\043\114\044\123\045\120\046" +
    "\115\047\125\050\124\051\116\001\002\000\010\003\uff9d" +
    "\063\uff9d\070\uff9d\001\002\000\010\003\uff9a\063\uff9a\070" +
    "\uff9a\001\002\000\010\003\uff97\063\uff97\070\uff97\001\002" +
    "\000\010\003\127\063\126\070\052\001\002\000\010\003" +
    "\uff9b\063\uff9b\070\uff9b\001\002\000\010\003\uff9e\063\uff9e" +
    "\070\uff9e\001\002\000\010\003\127\063\126\070\052\001" +
    "\002\000\010\003\uff9c\063\uff9c\070\uff9c\001\002\000\010" +
    "\003\uff98\063\uff98\070\uff98\001\002\000\010\003\uff99\063" +
    "\uff99\070\uff99\001\002\000\032\003\107\027\105\036\101" +
    "\037\077\040\112\041\110\052\076\053\103\054\111\055" +
    "\104\056\106\074\100\001\002\000\034\003\107\027\105" +
    "\036\101\037\077\040\112\041\110\052\076\053\103\054" +
    "\111\055\104\056\106\070\052\074\100\001\002\000\014" +
    "\002\uffa1\003\uffa1\063\uffa1\064\uffa1\070\uffa1\001\002\000" +
    "\010\003\uff96\063\uff96\070\uff96\001\002\000\014\002\uff9f" +
    "\003\uff9f\063\uff9f\064\uff9f\070\uff9f\001\002\000\014\002" +
    "\uffa0\003\uffa0\063\uffa0\064\uffa0\070\uffa0\001\002\000\014" +
    "\002\uffa2\003\uffa2\063\uffa2\064\uffa2\070\uffa2\001\002\000" +
    "\014\002\uff90\003\uff90\063\uff90\064\uff90\070\uff90\001\002" +
    "\000\004\060\137\001\002\000\010\003\127\063\126\070" +
    "\052\001\002\000\014\002\uff89\003\uff89\063\uff89\064\uff89" +
    "\070\uff89\001\002\000\006\057\143\060\142\001\002\000" +
    "\010\003\127\063\126\070\052\001\002\000\010\003\127" +
    "\063\126\070\052\001\002\000\014\002\uff8d\003\uff8d\063" +
    "\uff8d\064\uff8d\070\uff8d\001\002\000\014\002\uff8c\003\uff8c" +
    "\063\uff8c\064\uff8c\070\uff8c\001\002\000\014\002\uff85\003" +
    "\uff85\063\uff85\064\uff85\070\uff85\001\002\000\006\057\151" +
    "\060\150\001\002\000\010\003\127\063\126\070\052\001" +
    "\002\000\010\003\127\063\126\070\052\001\002\000\014" +
    "\002\uff87\003\uff87\063\uff87\064\uff87\070\uff87\001\002\000" +
    "\014\002\uff86\003\uff86\063\uff86\064\uff86\070\uff86\001\002" +
    "\000\004\060\155\001\002\000\010\003\127\063\126\070" +
    "\052\001\002\000\014\002\uff94\003\uff94\063\uff94\064\uff94" +
    "\070\uff94\001\002\000\004\060\160\001\002\000\010\003" +
    "\127\063\126\070\052\001\002\000\014\002\uff88\003\uff88" +
    "\063\uff88\064\uff88\070\uff88\001\002\000\006\057\164\060" +
    "\163\001\002\000\010\003\127\063\126\070\052\001\002" +
    "\000\010\003\127\063\126\070\052\001\002\000\014\002" +
    "\uff8f\003\uff8f\063\uff8f\064\uff8f\070\uff8f\001\002\000\014" +
    "\002\uff8e\003\uff8e\063\uff8e\064\uff8e\070\uff8e\001\002\000" +
    "\006\057\171\060\170\001\002\000\010\003\127\063\126" +
    "\070\052\001\002\000\010\003\127\063\126\070\052\001" +
    "\002\000\014\002\uff93\003\uff93\063\uff93\064\uff93\070\uff93" +
    "\001\002\000\014\002\uff92\003\uff92\063\uff92\064\uff92\070" +
    "\uff92\001\002\000\004\062\175\001\002\000\010\003\127" +
    "\063\126\070\052\001\002\000\014\002\uff8b\003\uff8b\063" +
    "\uff8b\064\uff8b\070\uff8b\001\002\000\004\060\200\001\002" +
    "\000\010\003\127\063\126\070\052\001\002\000\014\002" +
    "\uff91\003\uff91\063\uff91\064\uff91\070\uff91\001\002\000\004" +
    "\061\203\001\002\000\010\003\127\063\126\070\052\001" +
    "\002\000\014\002\uff8a\003\uff8a\063\uff8a\064\uff8a\070\uff8a" +
    "\001\002\000\014\003\207\013\212\014\206\015\213\016" +
    "\211\001\002\000\004\066\236\001\002\000\010\003\217" +
    "\063\216\070\052\001\002\000\010\002\uffdc\003\uffdc\064" +
    "\uffdc\001\002\000\004\066\230\001\002\000\004\066\225" +
    "\001\002\000\004\066\214\001\002\000\004\060\215\001" +
    "\002\000\010\003\217\063\216\070\052\001\002\000\014" +
    "\003\207\013\212\014\206\015\213\016\211\001\002\000" +
    "\016\003\207\013\212\014\206\015\213\016\211\070\052" +
    "\001\002\000\010\002\uffda\003\uffda\064\uffda\001\002\000" +
    "\010\002\uffe9\003\uffe9\064\uffe9\001\002\000\010\002\uffe7" +
    "\003\uffe7\064\uffe7\001\002\000\010\002\uffe8\003\uffe8\064" +
    "\uffe8\001\002\000\010\002\uffea\003\uffea\064\uffea\001\002" +
    "\000\004\060\226\001\002\000\010\003\217\063\216\070" +
    "\052\001\002\000\010\002\uffd7\003\uffd7\064\uffd7\001\002" +
    "\000\006\057\232\060\231\001\002\000\010\003\217\063" +
    "\216\070\052\001\002\000\010\003\217\063\216\070\052" +
    "\001\002\000\010\002\uffd8\003\uffd8\064\uffd8\001\002\000" +
    "\010\002\uffd9\003\uffd9\064\uffd9\001\002\000\010\002\uffd6" +
    "\003\uffd6\064\uffd6\001\002\000\004\060\237\001\002\000" +
    "\010\003\217\063\216\070\052\001\002\000\010\002\uffdb" +
    "\003\uffdb\064\uffdb\001\002\000\010\003\242\011\243\012" +
    "\245\001\002\000\010\003\252\063\251\070\052\001\002" +
    "\000\004\066\261\001\002\000\010\002\uffd2\003\uffd2\064" +
    "\uffd2\001\002\000\004\066\246\001\002\000\006\057\250" +
    "\060\247\001\002\000\010\003\252\063\251\070\052\001" +
    "\002\000\010\003\252\063\251\070\052\001\002\000\010" +
    "\003\242\011\243\012\245\001\002\000\012\003\242\011" +
    "\243\012\245\070\052\001\002\000\010\002\uffe5\003\uffe5" +
    "\064\uffe5\001\002\000\010\002\uffcf\003\uffcf\064\uffcf\001" +
    "\002\000\010\002\uffe3\003\uffe3\064\uffe3\001\002\000\010" +
    "\002\uffe4\003\uffe4\064\uffe4\001\002\000\010\002\uffe6\003" +
    "\uffe6\064\uffe6\001\002\000\010\002\uffd0\003\uffd0\064\uffd0" +
    "\001\002\000\004\060\262\001\002\000\010\003\252\063" +
    "\251\070\052\001\002\000\010\002\uffd1\003\uffd1\064\uffd1" +
    "\001\002\000\010\002\uffce\003\uffce\064\uffce\001\002\000" +
    "\004\067\336\001\002\000\020\003\273\013\275\015\276" +
    "\027\267\030\271\031\272\073\274\001\002\000\004\066" +
    "\333\001\002\000\010\002\uffc1\003\uffc1\064\uffc1\001\002" +
    "\000\004\066\326\001\002\000\004\066\323\001\002\000" +
    "\010\003\302\063\301\070\052\001\002\000\004\066\315" +
    "\001\002\000\004\066\310\001\002\000\004\066\277\001" +
    "\002\000\004\060\300\001\002\000\010\003\302\063\301" +
    "\070\052\001\002\000\020\003\273\013\275\015\276\027" +
    "\267\030\271\031\272\073\274\001\002\000\022\003\273" +
    "\013\275\015\276\027\267\030\271\031\272\070\052\073" +
    "\274\001\002\000\010\002\uffba\003\uffba\064\uffba\001\002" +
    "\000\010\002\uffc8\003\uffc8\064\uffc8\001\002\000\010\002" +
    "\uffc6\003\uffc6\064\uffc6\001\002\000\010\002\uffc7\003\uffc7" +
    "\064\uffc7\001\002\000\010\002\uffc9\003\uffc9\064\uffc9\001" +
    "\002\000\006\057\312\060\311\001\002\000\010\003\302" +
    "\063\301\070\052\001\002\000\010\003\302\063\301\070" +
    "\052\001\002\000\010\002\uffb9\003\uffb9\064\uffb9\001\002" +
    "\000\010\002\uffb8\003\uffb8\064\uffb8\001\002\000\006\057" +
    "\317\060\316\001\002\000\010\003\302\063\301\070\052" +
    "\001\002\000\010\003\302\063\301\070\052\001\002\000" +
    "\010\002\uffbf\003\uffbf\064\uffbf\001\002\000\010\002\uffbe" +
    "\003\uffbe\064\uffbe\001\002\000\010\002\uffb7\003\uffb7\064" +
    "\uffb7\001\002\000\004\060\324\001\002\000\010\003\302" +
    "\063\301\070\052\001\002\000\010\002\uffbd\003\uffbd\064" +
    "\uffbd\001\002\000\006\057\330\060\327\001\002\000\010" +
    "\003\302\063\301\070\052\001\002\000\010\003\302\063" +
    "\301\070\052\001\002\000\010\002\uffbc\003\uffbc\064\uffbc" +
    "\001\002\000\010\002\uffbb\003\uffbb\064\uffbb\001\002\000" +
    "\004\060\334\001\002\000\010\003\302\063\301\070\052" +
    "\001\002\000\010\002\uffc0\003\uffc0\064\uffc0\001\002\000" +
    "\004\026\337\001\002\000\004\066\340\001\002\000\004" +
    "\071\341\001\002\000\004\067\342\001\002\000\020\003" +
    "\ufff3\013\ufff3\015\ufff3\027\ufff3\030\ufff3\031\ufff3\073\ufff3" +
    "\001\002\000\006\003\346\027\344\001\002\000\004\066" +
    "\350\001\002\000\010\002\uff84\003\uff84\064\uff84\001\002" +
    "\000\004\070\052\001\002\000\010\002\uff82\003\uff82\064" +
    "\uff82\001\002\000\004\060\351\001\002\000\004\063\352" +
    "\001\002\000\004\037\353\001\002\000\004\066\354\001" +
    "\002\000\004\060\355\001\002\000\004\070\052\001\002" +
    "\000\010\002\uff83\003\uff83\064\uff83\001\002\000\006\003" +
    "\361\027\360\001\002\000\004\066\364\001\002\000\004" +
    "\070\052\001\002\000\010\002\uffb6\003\uffb6\064\uffb6\001" +
    "\002\000\010\002\uffb4\003\uffb4\064\uffb4\001\002\000\004" +
    "\060\365\001\002\000\004\070\052\001\002\000\010\002" +
    "\uffb5\003\uffb5\064\uffb5\001\002\000\012\003\371\011\372" +
    "\012\374\013\373\001\002\000\010\002\uffe2\003\uffe2\064" +
    "\uffe2\001\002\000\010\003\u0101\063\u0100\070\052\001\002" +
    "\000\004\066\u010b\001\002\000\004\066\u0108\001\002\000" +
    "\004\066\375\001\002\000\006\057\377\060\376\001\002" +
    "\000\010\003\u0101\063\u0100\070\052\001\002\000\010\003" +
    "\u0101\063\u0100\070\052\001\002\000\012\003\371\011\372" +
    "\012\374\013\373\001\002\000\014\003\371\011\372\012" +
    "\374\013\373\070\052\001\002\000\010\002\uffdf\003\uffdf" +
    "\064\uffdf\001\002\000\010\002\uffed\003\uffed\064\uffed\001" +
    "\002\000\010\002\uffeb\003\uffeb\064\uffeb\001\002\000\010" +
    "\002\uffec\003\uffec\064\uffec\001\002\000\010\002\uffee\003" +
    "\uffee\064\uffee\001\002\000\010\002\uffe0\003\uffe0\064\uffe0" +
    "\001\002\000\004\060\u0109\001\002\000\010\003\u0101\063" +
    "\u0100\070\052\001\002\000\010\002\uffde\003\uffde\064\uffde" +
    "\001\002\000\004\060\u010c\001\002\000\010\003\u0101\063" +
    "\u0100\070\052\001\002\000\010\002\uffe1\003\uffe1\064\uffe1" +
    "\001\002\000\010\002\uffdd\003\uffdd\064\uffdd\001\002\000" +
    "\034\003\u011a\027\u0118\036\u0115\037\u0111\040\u011d\041\u011b" +
    "\052\u0110\053\u0116\054\u011c\055\u0117\056\u0119\074\u0113\075" +
    "\u0114\001\002\000\004\066\u014e\001\002\000\004\066\u014b" +
    "\001\002\000\010\002\uff81\003\uff81\064\uff81\001\002\000" +
    "\004\066\u0148\001\002\000\004\066\u0145\001\002\000\004" +
    "\066\u0140\001\002\000\004\066\u013b\001\002\000\004\066" +
    "\u0138\001\002\000\004\066\u0135\001\002\000\004\066\u0130" +
    "\001\002\000\010\003\u0121\063\u0120\070\052\001\002\000" +
    "\004\066\u012a\001\002\000\004\066\u0127\001\002\000\004" +
    "\066\u011e\001\002\000\024\003\122\042\121\043\114\044" +
    "\123\045\120\046\115\047\125\050\124\051\116\001\002" +
    "\000\010\003\u0121\063\u0120\070\052\001\002\000\034\003" +
    "\u011a\027\u0118\036\u0115\037\u0111\040\u011d\041\u011b\052\u0110" +
    "\053\u0116\054\u011c\055\u0117\056\u0119\074\u0113\075\u0114\001" +
    "\002\000\036\003\u011a\027\u0118\036\u0115\037\u0111\040\u011d" +
    "\041\u011b\052\u0110\053\u0116\054\u011c\055\u0117\056\u0119\070" +
    "\052\074\u0113\075\u0114\001\002\000\010\002\uff7c\003\uff7c" +
    "\064\uff7c\001\002\000\010\002\uffa5\003\uffa5\064\uffa5\001" +
    "\002\000\010\002\uffa3\003\uffa3\064\uffa3\001\002\000\010" +
    "\002\uffa4\003\uffa4\064\uffa4\001\002\000\010\002\uffa6\003" +
    "\uffa6\064\uffa6\001\002\000\004\060\u0128\001\002\000\010" +
    "\003\u0121\063\u0120\070\052\001\002\000\010\002\uff75\003" +
    "\uff75\064\uff75\001\002\000\006\057\u012c\060\u012b\001\002" +
    "\000\010\003\u0121\063\u0120\070\052\001\002\000\010\003" +
    "\u0121\063\u0120\070\052\001\002\000\010\002\uff79\003\uff79" +
    "\064\uff79\001\002\000\010\002\uff78\003\uff78\064\uff78\001" +
    "\002\000\010\002\uff70\003\uff70\064\uff70\001\002\000\006" +
    "\057\u0132\060\u0131\001\002\000\010\003\u0121\063\u0120\070" +
    "\052\001\002\000\010\003\u0121\063\u0120\070\052\001\002" +
    "\000\010\002\uff72\003\uff72\064\uff72\001\002\000\010\002" +
    "\uff71\003\uff71\064\uff71\001\002\000\004\060\u0136\001\002" +
    "\000\010\003\u0121\063\u0120\070\052\001\002\000\010\002" +
    "\uff80\003\uff80\064\uff80\001\002\000\004\060\u0139\001\002" +
    "\000\010\003\u0121\063\u0120\070\052\001\002\000\010\002" +
    "\uff74\003\uff74\064\uff74\001\002\000\006\057\u013d\060\u013c" +
    "\001\002\000\010\003\u0121\063\u0120\070\052\001\002\000" +
    "\010\003\u0121\063\u0120\070\052\001\002\000\010\002\uff7b" +
    "\003\uff7b\064\uff7b\001\002\000\010\002\uff7a\003\uff7a\064" +
    "\uff7a\001\002\000\006\057\u0142\060\u0141\001\002\000\010" +
    "\003\u0121\063\u0120\070\052\001\002\000\010\003\u0121\063" +
    "\u0120\070\052\001\002\000\010\002\uff7f\003\uff7f\064\uff7f" +
    "\001\002\000\010\002\uff7e\003\uff7e\064\uff7e\001\002\000" +
    "\004\060\u0146\001\002\000\010\003\u0121\063\u0120\070\052" +
    "\001\002\000\010\002\uff73\003\uff73\064\uff73\001\002\000" +
    "\004\062\u0149\001\002\000\010\003\u0121\063\u0120\070\052" +
    "\001\002\000\010\002\uff77\003\uff77\064\uff77\001\002\000" +
    "\004\060\u014c\001\002\000\010\003\u0121\063\u0120\070\052" +
    "\001\002\000\010\002\uff7d\003\uff7d\064\uff7d\001\002\000" +
    "\004\061\u014f\001\002\000\010\003\u0121\063\u0120\070\052" +
    "\001\002\000\010\002\uff76\003\uff76\064\uff76\001\002\000" +
    "\020\003\u0154\013\u0158\015\u0159\027\u0152\030\u0156\031\u0155" +
    "\073\u0157\001\002\000\004\066\u0174\001\002\000\010\002" +
    "\uffb3\003\uffb3\064\uffb3\001\002\000\010\003\217\063\216" +
    "\070\052\001\002\000\004\066\u0170\001\002\000\004\066" +
    "\u016b\001\002\000\004\066\u0166\001\002\000\004\066\u0163" +
    "\001\002\000\004\066\u015a\001\002\000\004\060\u015b\001" +
    "\002\000\010\003\u015d\063\u015c\070\052\001\002\000\020" +
    "\003\u0154\013\u0158\015\u0159\027\u0152\030\u0156\031\u0155\073" +
    "\u0157\001\002\000\022\003\u0154\013\u0158\015\u0159\027\u0152" +
    "\030\u0156\031\u0155\070\052\073\u0157\001\002\000\010\002" +
    "\uffac\003\uffac\064\uffac\001\002\000\010\002\uffc4\003\uffc4" +
    "\064\uffc4\001\002\000\010\002\uffc2\003\uffc2\064\uffc2\001" +
    "\002\000\010\002\uffc3\003\uffc3\064\uffc3\001\002\000\010" +
    "\002\uffc5\003\uffc5\064\uffc5\001\002\000\004\057\u0164\001" +
    "\002\000\010\003\u015d\063\u015c\070\052\001\002\000\010" +
    "\002\uffab\003\uffab\064\uffab\001\002\000\006\057\u0168\060" +
    "\u0167\001\002\000\010\003\u015d\063\u015c\070\052\001\002" +
    "\000\010\003\u015d\063\u015c\070\052\001\002\000\010\002" +
    "\uffb1\003\uffb1\064\uffb1\001\002\000\010\002\uffb0\003\uffb0" +
    "\064\uffb0\001\002\000\006\057\u016d\060\u016c\001\002\000" +
    "\010\003\u015d\063\u015c\070\052\001\002\000\010\003\u015d" +
    "\063\u015c\070\052\001\002\000\010\002\uffae\003\uffae\064" +
    "\uffae\001\002\000\010\002\uffad\003\uffad\064\uffad\001\002" +
    "\000\004\060\u0171\001\002\000\010\003\u015d\063\u015c\070" +
    "\052\001\002\000\010\002\uffaf\003\uffaf\064\uffaf\001\002" +
    "\000\010\002\uffaa\003\uffaa\064\uffaa\001\002\000\004\060" +
    "\u0175\001\002\000\010\003\u015d\063\u015c\070\052\001\002" +
    "\000\010\002\uffb2\003\uffb2\064\uffb2\001\002\000\026\017" +
    "\021\020\033\021\042\022\030\023\027\024\022\025\013" +
    "\032\035\033\024\034\014\001\002\000\004\002\ufff8\001" +
    "\002\000\006\005\u017e\006\u017d\001\002\000\004\002\ufffd" +
    "\001\002\000\006\003\u0177\064\u0179\001\002\000\004\002" +
    "\ufff9\001\002\000\004\066\u0180\001\002\000\004\065\u017f" +
    "\001\002\000\004\002\uffff\001\002\000\026\017\ufffe\020" +
    "\ufffe\021\ufffe\022\ufffe\023\ufffe\024\ufffe\025\ufffe\032\ufffe" +
    "\033\ufffe\034\ufffe\001\002\000\010\002\ufff6\003\ufff6\064" +
    "\ufff6\001\002\000\004\065\u0183\001\002\000\006\003\000" +
    "\064\000\001\002\000\010\002\ufffa\003\u0177\064\u0179\001" +
    "\002\000\004\002\ufffb\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0183\000\012\002\005\004\006\005\007\006\010\001" +
    "\001\000\046\003\u0177\004\006\006\u0183\012\u0180\016\037" +
    "\020\036\022\017\024\015\026\024\031\016\033\025\034" +
    "\035\036\031\042\022\044\030\046\040\050\033\053\u0184" +
    "\001\001\000\002\001\001\000\012\003\u0177\004\006\006" +
    "\u017a\053\u0179\001\001\000\036\012\014\016\037\020\036" +
    "\022\017\024\015\026\024\031\016\033\025\034\035\036" +
    "\031\042\022\044\030\046\040\050\033\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\010" +
    "\u0150\001\001\000\004\011\u010e\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\051\366\001\001\000\004\010\356\001\001\000\002" +
    "\001\001\000\004\011\342\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\010\265\001\001\000\004\051\240" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\051" +
    "\204\001\001\000\002\001\001\000\004\011\066\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\051\043\001\001\000\002\001\001" +
    "\000\004\023\046\001\001\000\004\007\060\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\007\052\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\043\101\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\007\127\037\145\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\041\116\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\007\127\037\134\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\007\127\037\130" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\043\133\001\001\000\006\007\132\043\131" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\007\127\037\137\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\007\127\037\144" +
    "\001\001\000\006\007\127\037\143\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\007\127\037\152\001\001\000\006\007\127\037" +
    "\151\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\007\127\037\155\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\007\127\037\160\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\007\127\037" +
    "\165\001\001\000\006\007\127\037\164\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\007" +
    "\127\037\172\001\001\000\006\007\127\037\171\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\007\127\037\175\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\007\127\037\200\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\007\127\037\203\001\001" +
    "\000\002\001\001\000\004\021\207\001\001\000\002\001" +
    "\001\000\006\007\220\014\234\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\007\220\014\217\001\001\000\004" +
    "\021\223\001\001\000\006\007\222\021\221\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\007" +
    "\220\014\226\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\007\220\014\233\001\001\000\006\007\220\014" +
    "\232\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\007\220\014\237\001" +
    "\001\000\002\001\001\000\004\025\243\001\001\000\006" +
    "\007\252\015\263\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\007\252" +
    "\015\257\001\001\000\006\007\252\015\253\001\001\000" +
    "\004\025\256\001\001\000\006\007\255\025\254\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\007\252\015\262\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\032\267" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\007\303\027\321\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\007\303\027\302\001\001\000\004" +
    "\032\306\001\001\000\006\007\305\032\304\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\007" +
    "\303\027\313\001\001\000\006\007\303\027\312\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\007\303\027\320\001\001\000\006\007\303\027\317" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\007\303\027\324\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\007\303\027" +
    "\331\001\001\000\006\007\303\027\330\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\007" +
    "\303\027\334\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\045\344\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\007\346\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\007\355\001" +
    "\001\000\002\001\001\000\004\052\361\001\001\000\002" +
    "\001\001\000\004\007\362\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\007\365\001\001" +
    "\000\002\001\001\000\004\017\367\001\001\000\002\001" +
    "\001\000\006\007\u0102\013\u010d\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\007\u0102\013\u0106\001\001\000\006\007\u0102\013\u0101" +
    "\001\001\000\004\017\u0105\001\001\000\006\007\u0104\017" +
    "\u0103\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\007\u0102\013\u0109\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\007\u0102\013" +
    "\u010c\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\047\u0111\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\007\u0122\040\u012e\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\041\u011e\001\001\000\006\007\u0122\040\u0121\001\001" +
    "\000\004\047\u0125\001\001\000\006\007\u0124\047\u0123\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\007\u0122\040\u0128\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\007\u0122\040\u012d\001\001\000\006\007" +
    "\u0122\040\u012c\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\007\u0122\040" +
    "\u0133\001\001\000\006\007\u0122\040\u0132\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\007" +
    "\u0122\040\u0136\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\007\u0122\040\u0139\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\007\u0122\040\u013e\001\001\000\006" +
    "\007\u0122\040\u013d\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\007\u0122\040\u0143\001\001" +
    "\000\006\007\u0122\040\u0142\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\007\u0122\040\u0146" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\007" +
    "\u0122\040\u0149\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\007\u0122\040\u014c\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\007\u0122\040\u014f\001\001\000\002" +
    "\001\001\000\004\035\u0152\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\007\220\014\u0172\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\007\u015e" +
    "\030\u015d\001\001\000\004\035\u0161\001\001\000\006\007" +
    "\u0160\035\u015f\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\007\u015e\030\u0164\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\007\u015e\030\u0169\001" +
    "\001\000\006\007\u015e\030\u0168\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\007\u015e\030" +
    "\u016e\001\001\000\006\007\u015e\030\u016d\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\007" +
    "\u015e\030\u0171\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\007\u015e\030\u0175\001\001\000" +
    "\002\001\001\000\036\012\u0180\016\037\020\036\022\017" +
    "\024\015\026\024\031\016\033\025\034\035\036\031\042" +
    "\022\044\030\046\040\050\033\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\003\u0177\004" +
    "\006\006\u017a\053\u017b\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\003\u0177\004\006\006\u017a\053\u017b\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$IndigoSyntax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$IndigoSyntax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$IndigoSyntax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



	UserCommands userCommands = new UserCommands();
	FormCommands formCommands = new FormCommands();
	ComponentCommands componentCommands = new ComponentCommands();
	ErrorCommands errorCommands = new ErrorCommands(false);
	
	/* Getters*/
		public UserCommands getUserCommands(){
			return this.userCommands;
		}
		public FormCommands getFormCommands(){
			return this.formCommands;
		}
		public ComponentCommands getComponentCommands(){
			return this.componentCommands;
		}
		public ErrorCommands getErrorCommands(){
			return this.errorCommands;
		}
	/* End Getters*/


	/* Commands For User */	
		 void startLogin(){
			Symbol sym =  cur_token;
            int row = sym.left;
            int col = sym.right;
			userCommands.startLogin(String.valueOf(cur_token),row,col);
		}
			 void loginUser(String user){
				userCommands.loginUser(user);
			}
			 void loginPassword (String password){
				userCommands.loginPassword(password);
			}
		 void closeLogin(){
			 Symbol sym = cur_token;
            int row = sym.left;
            int column = sym.right;
			userCommands.closeLogin(String.valueOf(sym.value),row,column);
		}
		

		 void startUser(){
			//Close any user before is open
			//Open new user
			Symbol sym = cur_token;
            int row = sym.left;
            int column = sym.right;
			userCommands.open(String.valueOf(sym.value), row,column);
			System.out.println("User Created");
		}
			 void addUserName(String name){
				userCommands.addUser(name);
			}
			 void addUserPassword(String password){
				userCommands.addPassword(password);

			}
			 void addUserDate(String date){
				try{
					Date actualDate = new SimpleDateFormat("yyyy-MM-dd").parse(date);
					userCommands.addDate(actualDate);
				}catch(Exception ex){
					System.out.println("Error: "+ex.getMessage());
				}
			}
		 void closeUser(){
			 Symbol sym = cur_token;
            int row = sym.left;
            int column = sym.right;
			userCommands.close(String.valueOf(sym.value),row,column);
		}
		 void deleteUser(String ID){
			userCommands.delete(ID);
		}
		 void startModifyUser(){
			Symbol sym = cur_token;
            int row = sym.left;
            int column = sym.right;
			userCommands.openModify(String.valueOf(sym.value),row,column);
		}
			 void addPastUser(String name){
				userCommands.addPastUser(name);
			}
			 void addNewUser(String name){
				userCommands.addNewUser(name);
			}
			 void addNewPassword(String password){
				 userCommands.addPassword(password);
			 }
		 void closeModifyUser(){
			 Symbol sym = cur_token;
            int row = sym.left;
            int column = sym.right;
			userCommands.closeModify(String.valueOf(sym.value),row,column);
		}
			
	/* End Commands for User */

	/* Commands for Form */
		 void deleteForm(String ID){
			formCommands.delete(ID);
		}
		 void startModifyForm(){
			Symbol sym = cur_token;
            int row = sym.left;
            int column = sym.right;
            formCommands.openModify(String.valueOf(sym.value),row,column);
		}
		 void closeModifyForm(){
			 Symbol sym = cur_token;
            int row = sym.left;
            int column = sym.right;
			formCommands.closeModify(String.valueOf(sym.value),row,column);	
		}
		 void startForm(){
			Symbol sym = cur_token;
            int row = sym.left;
            int column = sym.right;
			formCommands.start(String.valueOf(sym.value),row,column);	
		}

		 void closeForm(){
			 Symbol sym = cur_token;
            int row = sym.left;
            int column = sym.right;
			formCommands.close(String.valueOf(sym.value),row,column);	
		}

			 void addIdForm(String ID){
				formCommands.addId(ID);
			}
			 void addTittleForm(String tittle){
				formCommands.addTittle(tittle);
			}
			 void addNameForm(String name){
				formCommands.addName(name);
			}
			 void addTopicForm(String topic){
				formCommands.addTopic(topic);
			}
			void addUserCreatorForm(String userCreator){
				formCommands.addUser(userCreator);
			}
			void addDateCreatorForm(String date){
				formCommands.addDate(date);
			}
	/* End Commands for Form */

	/* COMMANDS FOR COMPONENTS */
		 void deleteComponent(String ID, String Form){
			componentCommands.delete(ID, Form);
		}
		 void startModifyComponent(){
			Symbol sym = cur_token;
            int row = sym.left;
            int column = sym.right;
            componentCommands.openModify(String.valueOf(sym),row,column);
		}
		 void closeModifyComponent(){
			 Symbol sym = cur_token;
            int row = sym.left;
            int column = sym.right;
			componentCommands.closeModify(String.valueOf(sym),row,column);
		}
		 void startComponent(){
			Symbol sym = cur_token;
            int row = sym.left;
            int column = sym.right;
            componentCommands.start(String.valueOf(sym),row,column);
		}
		 void closeComponent(){
			 Symbol sym = cur_token;
            int row = sym.left;
            int column = sym.right;
			componentCommands.close(String.valueOf(sym),row,column);
		}
			 void addIdComponent(String ID){
				componentCommands.addId( ID);
			}
			 void addnCampName(String camp){
				componentCommands.addCampName( camp);
			}
			 void addFormName(String name){
				componentCommands.addFormName(name);
			}
			 void addClassName(String CLASS){
				componentCommands.addClassName(CLASS);
			}
			 
			 void addVisible_Text(String visible){
				componentCommands.addVisibleText(visible);
			}
			 void addAlign(String align){
				componentCommands.addAlign(align);			
			}
			 void addRequired(String required){
				componentCommands.addRequired(required);
			}
			 void addOptions(String options){
				componentCommands.addOptions(options);
			}
			 void addRows(String rows){
				componentCommands.addRows(rows);
			}
			 void addCols(String cols){
				componentCommands.addCols(cols);
			}
			 void addImage(String url){
				componentCommands.addUrl(url);
			}
	/* END COMPONENTS*/

	@Override
	public void syntax_error(Symbol symbol){
		/*
		//This code works better with report_error(String message, Object info) method
		if (info instanceof String){
			errors++; 
			System.err.println("  "+ errors + "==> " + info + " "+ message + 
							"\n       Parsing resumed from 2nd token before" + s.current_lexeme()+"\n");
		}
		else {
			StringBuffer m = new StringBuffer("Error ");
			if (info instanceof java_cup.runtime.Symbol) 
			m.append( "("+info.toString()+")" );     
			m.append(" : "+message);   
			System.err.println(m);
		}*/
    	report_expected_token_ids();
	    int line = symbol.left;
	    int column = symbol.right;
	    String token = (String) cur_token.value;
	    //We get the production
            String errorArmado="";
            TokenHandler tokenHandler = new TokenHandler();
            for(int index=0; index<expected_token_ids().size() ; index++){
                //We traduce the token to a form that the user might understand
                errorArmado += tokenHandler.expectedFormIndigo(symbl_name_from_id(expected_token_ids().get(index)));
				errorArmado += ", ";
            }
			
            String error = "Se esperaba la forma: " + errorArmado;
			errorCommands.addError(new ErrorIndigo(error,token, line, column));
            System.out.println("Error en token:"+token+"\n"+error+" \n Linea: "+line+", Columna: "+column);
	}
	@Override
	public void unrecovered_syntax_error(Symbol symbol){
		syntax_error(symbol);
	}
	


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$IndigoSyntax$actions {
  private final IndigoSyntax parser;

  /** Constructor */
  CUP$IndigoSyntax$actions(IndigoSyntax parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$IndigoSyntax$do_action_part00000000(
    int                        CUP$IndigoSyntax$act_num,
    java_cup.runtime.lr_parser CUP$IndigoSyntax$parser,
    java.util.Stack            CUP$IndigoSyntax$stack,
    int                        CUP$IndigoSyntax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$IndigoSyntax$result;

      /* select the action based on the action number */
      switch (CUP$IndigoSyntax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= ip EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		RESULT = start_val;
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$IndigoSyntax$parser.done_parsing();
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // sp ::= LESS START GREATER 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("sp",0, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // fp ::= LESS FINAL GREATER 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("fp",1, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // so ::= LESS APERTURE COLON 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("so",2, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ip ::= sp iop 
            {
              Object RESULT =null;
		System.out.println("0");
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("ip",3, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ip ::= io 
            {
              Object RESULT =null;
		System.out.println("1");
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("ip",3, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ip ::= error iop 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("ip",3, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ip ::= error io 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("ip",3, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // iop ::= io iop 
            {
              Object RESULT =null;
		System.out.println("IOP CALLED");
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("iop",41, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // iop ::= fp 
            {
              Object RESULT =null;
		System.out.println("Empty IO");
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("iop",41, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // io ::= so partiture 
            {
              Object RESULT =null;
		System.out.println("2");
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("io",4, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // io ::= error partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("io",4, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // initu ::= GREATER OPEN_CURLY CREDENTIAL COLON OPEN_BRACKET OPEN_CURLY 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("initu",39, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-5)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // close ::= CLOSE_CURLY CLOSE_BRACKET CLOSE_CURLY LESS END GREATER 
            {
              Object RESULT =null;
		System.out.println("CLOSE");
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("close",5, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-5)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // initf ::= GREATER OPEN_CURLY FORM_PARAMETERS COLON OPEN_BRACKET OPEN_CURLY 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("initf",6, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-5)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // initc ::= GREATER OPEN_CURLY C_PARAMETERS COLON OPEN_BRACKET OPEN_CURLY 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("initc",7, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-5)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // partiture ::= keywordu 
            {
              Object RESULT =null;
		System.out.println("3");
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("partiture",8, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // partiture ::= keywordf 
            {
              Object RESULT =null;
		System.out.println("4");
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("partiture",8, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // partiture ::= keywordc 
            {
              Object RESULT =null;
		System.out.println("5");
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("partiture",8, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // gcreate_partiture ::= COMA gcreate_user 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate_partiture",9, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // gcreate_partiture ::= close 
            {
              Object RESULT =null;
		  System.out.println("Starting User");startUser(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate_partiture",9, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // gcreate_partiture ::= error close 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate_partiture",9, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // gcreate_partiture ::= error gcreate_user 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate_partiture",9, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // gmodify_partiture ::= COMA gmodify_user 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_partiture",10, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // gmodify_partiture ::= close 
            {
              Object RESULT =null;
		 startModifyUser();System.out.println("Starting Modify User"); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_partiture",10, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // gmodify_partiture ::= error close 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_partiture",10, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // gmodify_partiture ::= error gmodify_user 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_partiture",10, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // glogin_partiture ::= COMA glogin_user 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("glogin_partiture",11, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // glogin_partiture ::= close 
            {
              Object RESULT =null;
		  startLogin();
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("glogin_partiture",11, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // glogin_partiture ::= error close 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("glogin_partiture",11, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // glogin_partiture ::= error glogin_user 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("glogin_partiture",11, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // gcreate ::= CREATE_U initu gcreate_user 
            {
              Object RESULT =null;
		System.out.println("Closing USER");closeUser();
												
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate",12, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // gcreate_user ::= USER COLON TEXTWIS gcreate_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		System.out.println("12"); addUserName(String.valueOf(text).replace("\"","")); 
																	
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate_user",13, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // gcreate_user ::= PASSWORD COLON TEXTWIS gcreate_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 System.out.println("13");addUserPassword(String.valueOf(text).replace("\"","")); 
																	
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate_user",13, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // gcreate_user ::= PASSWORD COLON TEXTWS gcreate_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 System.out.println("13");addUserPassword(String.valueOf(text).replace("\"","")); 
																	
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate_user",13, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // gcreate_user ::= DATE COLON TEXTWIS gcreate_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 System.out.println("14");addUserDate(String.valueOf(text).replace("\"","")); 
																	
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate_user",13, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // gcreate_user ::= error gcreate_partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate_user",13, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // gmodify ::= MODIFY_U initu gmodify_user 
            {
              Object RESULT =null;
		 closeModifyUser();
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify",14, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // gmodify_user ::= PAST_USER COLON TEXTWIS gmodify_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addPastUser(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_user",15, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // gmodify_user ::= NEW_USER COLON TEXTWIS gmodify_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addNewUser(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_user",15, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // gmodify_user ::= NEW_PASSWORD COLON TEXTWIS gmodify_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addUserPassword(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_user",15, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // gmodify_user ::= NEW_PASSWORD COLON TEXTWS gmodify_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addUserPassword(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_user",15, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // gmodify_user ::= DATE COLON TEXTWIS gmodify_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addUserDate(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_user",15, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // gmodify_user ::= error gmodify_partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_user",15, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // gdelete ::= DELETE_U initu gdelete_user 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gdelete",16, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // gdelete_user ::= USER COLON TEXTWIS close 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		deleteUser(String.valueOf(text).replace("\"",""));
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gdelete_user",17, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // gdelete_user ::= error close 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gdelete_user",17, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // glogin ::= LOGIN_U initu glogin_user 
            {
              Object RESULT =null;
		closeLogin();
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("glogin",18, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // glogin_user ::= USER COLON TEXTWIS glogin_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 loginUser(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("glogin_user",19, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // glogin_user ::= PASSWORD COLON TEXTWIS glogin_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 loginPassword(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("glogin_user",19, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // glogin_user ::= PASSWORD COLON TEXTWS glogin_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 loginPassword(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("glogin_user",19, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // glogin_user ::= error glogin_partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("glogin_user",19, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // keywordu ::= gcreate 
            {
              Object RESULT =null;
		System.out.println("7");
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordu",20, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // keywordu ::= gmodify 
            {
              Object RESULT =null;
		System.out.println("8");
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordu",20, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // keywordu ::= gdelete 
            {
              Object RESULT =null;
		System.out.println("9");
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordu",20, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // keywordu ::= glogin 
            {
              Object RESULT =null;
		System.out.println("10");
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordu",20, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // gcreatef_partiture ::= COMA gcreatef_form 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_partiture",21, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // gcreatef_partiture ::= close 
            {
              Object RESULT =null;
		 startForm();  
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_partiture",21, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // gcreatef_partiture ::= error close 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_partiture",21, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // gcreatef_partiture ::= error gcreatef_form 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_partiture",21, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // gmodifyf_partiture ::= COMA gmodifyf_form 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_partiture",22, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // gmodifyf_partiture ::= close 
            {
              Object RESULT =null;
		 startModifyForm(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_partiture",22, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // gmodifyf_partiture ::= error close 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_partiture",22, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // gmodifyf_partiture ::= error gmodifyf_form 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_partiture",22, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // gcreatef ::= NEW_F initf gcreatef_form 
            {
              Object RESULT =null;
		 closeForm(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef",23, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // gcreatef_form ::= ID COLON TEXTWIS gcreatef_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addIdForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_form",24, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // gcreatef_form ::= TITTLE COLON TEXTWS gcreatef_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addTittleForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_form",24, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // gcreatef_form ::= TITTLE COLON TEXTWIS gcreatef_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addTittleForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_form",24, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // gcreatef_form ::= NAME_F COLON TEXTWIS gcreatef_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addNameForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_form",24, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // gcreatef_form ::= TOPIC COLON TEXTWS gcreatef_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addTopicForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_form",24, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // gcreatef_form ::= TOPIC COLON TEXTWIS gcreatef_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addTopicForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_form",24, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // gcreatef_form ::= NEW_USER COLON TEXTWIS gcreatef_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addUserCreatorForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_form",24, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // gcreatef_form ::= DATE COLON TEXTWS gcreatef_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addDateCreatorForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_form",24, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // gcreatef_form ::= DATE COLON TEXTWIS gcreatef_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addDateCreatorForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_form",24, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // gcreatef_form ::= error gcreatef_partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_form",24, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // gdeletef ::= DELETE_F initf gdeletef_form 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gdeletef",25, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // gdeletef_form ::= ID COLON TEXTWIS close 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 deleteForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gdeletef_form",40, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // gdeletef_form ::= error close 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gdeletef_form",40, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // gmodifyf ::= MODIFY_F initf gmodifyf_form 
            {
              Object RESULT =null;
		 closeModifyForm(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf",26, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // gmodifyf_form ::= ID COLON TEXTWIS gmodifyf_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addIdForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_form",27, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // gmodifyf_form ::= TITTLE COLON TEXTWS gmodifyf_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addTittleForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_form",27, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // gmodifyf_form ::= TITTLE COLON TEXTWIS gmodifyf_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addTittleForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_form",27, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // gmodifyf_form ::= NAME_F COLON TEXTWIS gmodifyf_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addNameForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_form",27, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // gmodifyf_form ::= TOPIC COLON TEXTWS gmodifyf_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addTopicForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_form",27, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // gmodifyf_form ::= TOPIC COLON TEXTWIS gmodifyf_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addTopicForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_form",27, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // gmodifyf_form ::= NEW_USER COLON TEXTWIS gmodifyf_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addUserCreatorForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_form",27, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // gmodifyf_form ::= DATE COLON TEXTWS gmodifyf_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addDateCreatorForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_form",27, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // gmodifyf_form ::= error gmodify_partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_form",27, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // keywordf ::= gcreatef 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordf",28, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // keywordf ::= gdeletef 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordf",28, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // keywordf ::= gmodifyf 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordf",28, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // modifyc_partiture ::= COMA modifyc_component 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_partiture",30, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // modifyc_partiture ::= close 
            {
              Object RESULT =null;
		 startModifyComponent(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_partiture",30, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // modifyc_partiture ::= error close 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_partiture",30, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // modifyc_partiture ::= error modifyc_component 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_partiture",30, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // createc_partiture ::= COMA createc_component 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_partiture",29, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // createc_partiture ::= close 
            {
              Object RESULT =null;
		 startComponent(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_partiture",29, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // createc_partiture ::= error close 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_partiture",29, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // createc_partiture ::= error createc_component 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_partiture",29, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // classnames ::= TEXT_CAMP 
            {
              Object RESULT =null;
		 RESULT = "CAMPO_TEXTO"; 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // classnames ::= TEXT_AREA 
            {
              Object RESULT =null;
		 RESULT = "AREA_TEXTO"; 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // classnames ::= CHECKBOX 
            {
              Object RESULT =null;
		 RESULT = "CHECKBOX"; 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // classnames ::= RATIO 
            {
              Object RESULT =null;
		 RESULT = "RADIO"; 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // classnames ::= FILE 
            {
              Object RESULT =null;
		 RESULT = "FICHERO"; 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // classnames ::= IMAGE 
            {
              Object RESULT =null;
		 RESULT = "IMAGEN"; 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // classnames ::= COMBO 
            {
              Object RESULT =null;
		 RESULT = "COMBO"; 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // classnames ::= BUTTON 
            {
              Object RESULT =null;
		 RESULT = "BOTON"; 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // classnames ::= error createc_partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // createc ::= ADD_C initc createc_component 
            {
              Object RESULT =null;
		  closeComponent();
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc",32, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // createc_component ::= ID COLON TEXTWIS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addIdComponent(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // createc_component ::= NAME_C COLON TEXTWS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addnCampName(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // createc_component ::= NAME_C COLON TEXTWIS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addnCampName(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // createc_component ::= FORM COLON TEXTWIS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addFormName(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // createc_component ::= CLASS COLON classnames createc_partiture 
            {
              Object RESULT =null;
		int CLASSleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int CLASSright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object CLASS = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addClassName(String.valueOf(CLASS).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // createc_component ::= OPTIONS COLON TEXTWS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addOptions(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // createc_component ::= OPTIONS COLON TEXTWIS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addOptions(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // createc_component ::= TEXTV COLON TEXTWS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addVisible_Text(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // createc_component ::= TEXTV COLON TEXTWIS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addVisible_Text(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // createc_component ::= ALIGNMENT COLON POSALIGNMENT createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addAlign(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // createc_component ::= REQUIRED COLON BOOL createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addRequired(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // createc_component ::= ROWS COLON TEXTWIS createc_partiture 
            {
              Object RESULT =null;
		int numberleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int numberright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object number = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addRows(String.valueOf(number).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // createc_component ::= COLS COLON TEXTWIS createc_partiture 
            {
              Object RESULT =null;
		int numberleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int numberright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object number = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addCols(String.valueOf(number).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // createc_component ::= URL COLON TEXTWS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addImage(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // createc_component ::= URL COLON TEXTWIS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addImage(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // createc_component ::= error createc_partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // deletec ::= DELETE_C initc deletec_component 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("deletec",34, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // deletec_component ::= ID COLON TEXTWIS COMA FORM COLON TEXTWIS close 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-5)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-5)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-5)).value;
		int textoleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textoright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object texto = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 deleteComponent(String.valueOf(text).replace("\"",""), String.valueOf(texto));
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("deletec_component",35, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-7)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // deletec_component ::= error close 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("deletec_component",35, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // modifyc ::= MODIFY_C initc modifyc_component 
            {
              Object RESULT =null;
		 closeModifyComponent();
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc",36, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // modifyc_component ::= ID COLON TEXTWIS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addIdComponent(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // modifyc_component ::= NAME_C COLON TEXTWS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addnCampName(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // modifyc_component ::= NAME_C COLON TEXTWIS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addnCampName(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // modifyc_component ::= FORM COLON TEXTWIS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addFormName(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // modifyc_component ::= CLASS COLON classnames modifyc_partiture 
            {
              Object RESULT =null;
		int CLASSleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int CLASSright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object CLASS = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addClassName(String.valueOf(CLASS).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // modifyc_component ::= OPTIONS COLON TEXTWS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addOptions(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // modifyc_component ::= OPTIONS COLON TEXTWIS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addOptions(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // modifyc_component ::= TEXTV COLON TEXTWS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addVisible_Text(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // modifyc_component ::= TEXTV COLON TEXTWIS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addVisible_Text(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // modifyc_component ::= ALIGNMENT COLON POSALIGNMENT modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addAlign(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // modifyc_component ::= REQUIRED COLON BOOL modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addRequired(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // modifyc_component ::= ROWS COLON TEXTWIS modifyc_partiture 
            {
              Object RESULT =null;
		int numberleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int numberright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object number = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addRows(String.valueOf(number).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // modifyc_component ::= COLS COLON TEXTWIS modifyc_partiture 
            {
              Object RESULT =null;
		int numberleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int numberright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object number = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addCols(String.valueOf(number).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // modifyc_component ::= INDEX COLON TEXTWIS modifyc_partiture 
            {
              Object RESULT =null;
		int numberleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int numberright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object number = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 componentCommands.setIndex(String.valueOf(number)); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // modifyc_component ::= URL COLON TEXTWS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addImage(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // modifyc_component ::= URL COLON TEXTWIS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addImage(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // modifyc_component ::= error modifyc_partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // keywordc ::= createc 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordc",38, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // keywordc ::= deletec 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordc",38, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // keywordc ::= modifyc 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordc",38, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$IndigoSyntax$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$IndigoSyntax$do_action(
    int                        CUP$IndigoSyntax$act_num,
    java_cup.runtime.lr_parser CUP$IndigoSyntax$parser,
    java.util.Stack            CUP$IndigoSyntax$stack,
    int                        CUP$IndigoSyntax$top)
    throws java.lang.Exception
    {
              return CUP$IndigoSyntax$do_action_part00000000(
                               CUP$IndigoSyntax$act_num,
                               CUP$IndigoSyntax$parser,
                               CUP$IndigoSyntax$stack,
                               CUP$IndigoSyntax$top);
    }
}

}
