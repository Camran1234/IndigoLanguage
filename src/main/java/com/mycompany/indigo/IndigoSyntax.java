
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.mycompany.indigo;

import com.mycompany.handlers.ComponentCommands;
import com.mycompany.handlers.FormCommands;
import com.mycompany.handlers.UserCommands;
import java.text.SimpleDateFormat;
import com.mycompany.indigo.*;
import java.util.Date;
import java_cup.runtime.Symbol;


/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class IndigoSyntax extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return symIndigo.class;
}

  /** Default constructor. */
  @Deprecated
  public IndigoSyntax() {super();}

  /**
     * @param s
     * @deprecated */
  @Deprecated
  public IndigoSyntax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public IndigoSyntax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\156\000\002\002\004\000\002\002\005\000\002\003" +
    "\005\000\002\004\005\000\002\005\005\000\002\005\003" +
    "\000\002\006\005\000\002\006\002\000\002\006\005\000" +
    "\002\051\010\000\002\007\010\000\002\010\010\000\002" +
    "\011\010\000\002\012\003\000\002\012\003\000\002\012" +
    "\003\000\002\013\004\000\002\013\003\000\002\014\004" +
    "\000\002\014\003\000\002\015\004\000\002\015\003\000" +
    "\002\016\005\000\002\017\006\000\002\017\006\000\002" +
    "\017\006\000\002\017\004\000\002\020\005\000\002\021" +
    "\006\000\002\021\006\000\002\021\006\000\002\021\006" +
    "\000\002\021\004\000\002\022\005\000\002\023\006\000" +
    "\002\023\004\000\002\024\005\000\002\025\006\000\002" +
    "\025\006\000\002\025\004\000\002\026\003\000\002\026" +
    "\003\000\002\026\003\000\002\026\003\000\002\027\004" +
    "\000\002\027\003\000\002\030\004\000\002\030\003\000" +
    "\002\031\005\000\002\032\006\000\002\032\006\000\002" +
    "\032\006\000\002\032\006\000\002\032\004\000\002\033" +
    "\005\000\002\052\006\000\002\052\004\000\002\034\005" +
    "\000\002\035\006\000\002\035\006\000\002\035\006\000" +
    "\002\035\006\000\002\035\004\000\002\036\003\000\002" +
    "\036\003\000\002\036\003\000\002\040\004\000\002\040" +
    "\003\000\002\037\004\000\002\037\003\000\002\041\003" +
    "\000\002\041\003\000\002\041\003\000\002\041\003\000" +
    "\002\041\003\000\002\041\003\000\002\041\003\000\002" +
    "\041\003\000\002\042\005\000\002\043\006\000\002\043" +
    "\006\000\002\043\006\000\002\043\006\000\002\043\006" +
    "\000\002\043\006\000\002\043\006\000\002\043\006\000" +
    "\002\043\006\000\002\043\006\000\002\043\006\000\002" +
    "\043\004\000\002\044\005\000\002\045\006\000\002\045" +
    "\004\000\002\046\005\000\002\047\006\000\002\047\006" +
    "\000\002\047\006\000\002\047\006\000\002\047\006\000" +
    "\002\047\006\000\002\047\006\000\002\047\006\000\002" +
    "\047\006\000\002\047\006\000\002\047\006\000\002\047" +
    "\004\000\002\050\003\000\002\050\003\000\002\050\003" +
    "" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0132\000\010\002\ufffa\003\004\065\005\001\002\000" +
    "\026\017\021\020\033\021\042\022\030\023\027\024\022" +
    "\025\013\032\035\033\024\034\014\001\002\000\006\004" +
    "\u0131\006\u0111\001\002\000\006\003\004\065\u010f\001\002" +
    "\000\026\017\021\020\033\021\042\022\030\023\027\024" +
    "\022\025\013\032\035\033\024\034\014\001\002\000\004" +
    "\002\012\001\002\000\004\002\ufffc\001\002\000\004\002" +
    "\001\001\002\000\004\066\317\001\002\000\004\066\070" +
    "\001\002\000\010\002\ufffa\003\004\065\u010f\001\002\000" +
    "\010\002\uffd6\003\uffd6\065\uffd6\001\002\000\010\002\uffc2" +
    "\003\uffc2\065\uffc2\001\002\000\010\002\uffd7\003\uffd7\065" +
    "\uffd7\001\002\000\004\066\043\001\002\000\004\066\317" +
    "\001\002\000\010\002\uff96\003\uff96\065\uff96\001\002\000" +
    "\004\066\070\001\002\000\010\002\ufff4\003\ufff4\065\ufff4" +
    "\001\002\000\010\002\uffc1\003\uffc1\065\uffc1\001\002\000" +
    "\004\066\317\001\002\000\004\066\043\001\002\000\010" +
    "\002\uff95\003\uff95\065\uff95\001\002\000\010\002\ufff3\003" +
    "\ufff3\065\ufff3\001\002\000\004\066\043\001\002\000\010" +
    "\002\ufff2\003\ufff2\065\ufff2\001\002\000\004\066\070\001" +
    "\002\000\010\002\uffc0\003\uffc0\065\uffc0\001\002\000\010" +
    "\002\uffd8\003\uffd8\065\uffd8\001\002\000\010\002\uffd9\003" +
    "\uffd9\065\uffd9\001\002\000\010\002\uff94\003\uff94\065\uff94" +
    "\001\002\000\004\066\043\001\002\000\004\070\062\001" +
    "\002\000\006\003\045\011\046\001\002\000\004\071\052" +
    "\001\002\000\004\067\050\001\002\000\010\002\uffe0\003" +
    "\uffe0\065\uffe0\001\002\000\004\060\051\001\002\000\004" +
    "\071\052\001\002\000\004\073\054\001\002\000\010\002" +
    "\uffdf\003\uffdf\065\uffdf\001\002\000\004\071\055\001\002" +
    "\000\004\065\056\001\002\000\004\007\057\001\002\000" +
    "\004\066\060\001\002\000\010\002\ufff7\003\ufff7\065\ufff7" +
    "\001\002\000\010\002\uffde\003\uffde\065\uffde\001\002\000" +
    "\004\010\063\001\002\000\004\067\064\001\002\000\004" +
    "\072\065\001\002\000\004\070\066\001\002\000\020\003" +
    "\ufff8\011\ufff8\012\ufff8\013\ufff8\014\ufff8\015\ufff8\016\ufff8" +
    "\001\002\000\032\003\107\027\106\036\101\037\076\040" +
    "\112\041\110\052\077\053\103\054\111\055\104\056\105" +
    "\075\100\001\002\000\004\070\071\001\002\000\004\035" +
    "\072\001\002\000\004\067\073\001\002\000\004\072\074" +
    "\001\002\000\004\070\075\001\002\000\032\003\ufff5\027" +
    "\ufff5\036\ufff5\037\ufff5\040\ufff5\041\ufff5\052\ufff5\053\ufff5" +
    "\054\ufff5\055\ufff5\056\ufff5\075\ufff5\001\002\000\004\067" +
    "\246\001\002\000\004\067\243\001\002\000\004\067\240" +
    "\001\002\000\004\067\235\001\002\000\010\002\uffb3\003" +
    "\uffb3\065\uffb3\001\002\000\004\067\232\001\002\000\004" +
    "\067\227\001\002\000\004\067\224\001\002\000\004\067" +
    "\221\001\002\000\006\064\125\071\052\001\002\000\004" +
    "\067\215\001\002\000\004\067\212\001\002\000\004\067" +
    "\113\001\002\000\022\042\121\043\114\044\122\045\120" +
    "\046\115\047\124\050\123\051\116\001\002\000\006\064" +
    "\uffba\071\uffba\001\002\000\006\064\uffb7\071\uffb7\001\002" +
    "\000\006\064\uffb4\071\uffb4\001\002\000\006\064\125\071" +
    "\052\001\002\000\006\064\uffb8\071\uffb8\001\002\000\006" +
    "\064\uffbb\071\uffbb\001\002\000\006\064\uffb9\071\uffb9\001" +
    "\002\000\006\064\uffb5\071\uffb5\001\002\000\006\064\uffb6" +
    "\071\uffb6\001\002\000\032\003\141\027\136\036\134\037" +
    "\131\040\144\041\142\052\130\053\135\054\143\055\137" +
    "\056\140\075\133\001\002\000\010\002\uffbc\003\uffbc\065" +
    "\uffbc\001\002\000\010\002\uffaf\003\uffaf\065\uffaf\001\002" +
    "\000\004\067\207\001\002\000\004\067\204\001\002\000" +
    "\010\002\uffbd\003\uffbd\065\uffbd\001\002\000\004\067\201" +
    "\001\002\000\004\067\176\001\002\000\004\067\173\001" +
    "\002\000\004\067\170\001\002\000\004\067\165\001\002" +
    "\000\004\067\162\001\002\000\006\064\147\071\052\001" +
    "\002\000\004\067\156\001\002\000\004\067\153\001\002" +
    "\000\004\067\145\001\002\000\022\042\121\043\114\044" +
    "\122\045\120\046\115\047\124\050\123\051\116\001\002" +
    "\000\006\064\147\071\052\001\002\000\032\003\141\027" +
    "\136\036\134\037\131\040\144\041\142\052\130\053\135" +
    "\054\143\055\137\056\140\075\133\001\002\000\010\002" +
    "\uff9f\003\uff9f\065\uff9f\001\002\000\010\002\uffbe\003\uffbe" +
    "\065\uffbe\001\002\000\010\002\uffbf\003\uffbf\065\uffbf\001" +
    "\002\000\004\061\154\001\002\000\006\064\147\071\052" +
    "\001\002\000\010\002\uff9a\003\uff9a\065\uff9a\001\002\000" +
    "\004\057\157\001\002\000\006\064\147\071\052\001\002" +
    "\000\010\002\uff9d\003\uff9d\065\uff9d\001\002\000\010\002" +
    "\uff97\003\uff97\065\uff97\001\002\000\004\057\163\001\002" +
    "\000\006\064\147\071\052\001\002\000\010\002\uff98\003" +
    "\uff98\065\uff98\001\002\000\004\061\166\001\002\000\006" +
    "\064\147\071\052\001\002\000\010\002\uff99\003\uff99\065" +
    "\uff99\001\002\000\004\060\171\001\002\000\006\064\147" +
    "\071\052\001\002\000\010\002\uffa2\003\uffa2\065\uffa2\001" +
    "\002\000\004\057\174\001\002\000\006\064\147\071\052" +
    "\001\002\000\010\002\uff9e\003\uff9e\065\uff9e\001\002\000" +
    "\004\057\177\001\002\000\006\064\147\071\052\001\002" +
    "\000\010\002\uffa1\003\uffa1\065\uffa1\001\002\000\004\063" +
    "\202\001\002\000\006\064\147\071\052\001\002\000\010" +
    "\002\uff9c\003\uff9c\065\uff9c\001\002\000\004\060\205\001" +
    "\002\000\006\064\147\071\052\001\002\000\010\002\uffa0" +
    "\003\uffa0\065\uffa0\001\002\000\004\062\210\001\002\000" +
    "\006\064\147\071\052\001\002\000\010\002\uff9b\003\uff9b" +
    "\065\uff9b\001\002\000\004\061\213\001\002\000\006\064" +
    "\125\071\052\001\002\000\010\002\uffaa\003\uffaa\065\uffaa" +
    "\001\002\000\004\057\216\001\002\000\006\064\125\071" +
    "\052\001\002\000\010\002\uffad\003\uffad\065\uffad\001\002" +
    "\000\010\002\uffa7\003\uffa7\065\uffa7\001\002\000\004\060" +
    "\222\001\002\000\006\064\125\071\052\001\002\000\010" +
    "\002\uffb2\003\uffb2\065\uffb2\001\002\000\004\057\225\001" +
    "\002\000\006\064\125\071\052\001\002\000\010\002\uffa8" +
    "\003\uffa8\065\uffa8\001\002\000\004\061\230\001\002\000" +
    "\006\064\125\071\052\001\002\000\010\002\uffa9\003\uffa9" +
    "\065\uffa9\001\002\000\004\057\233\001\002\000\006\064" +
    "\125\071\052\001\002\000\010\002\uffae\003\uffae\065\uffae" +
    "\001\002\000\004\057\236\001\002\000\006\064\125\071" +
    "\052\001\002\000\010\002\uffb1\003\uffb1\065\uffb1\001\002" +
    "\000\004\063\241\001\002\000\006\064\125\071\052\001" +
    "\002\000\010\002\uffac\003\uffac\065\uffac\001\002\000\004" +
    "\062\244\001\002\000\006\064\125\071\052\001\002\000" +
    "\010\002\uffab\003\uffab\065\uffab\001\002\000\004\060\247" +
    "\001\002\000\006\064\125\071\052\001\002\000\010\002" +
    "\uffb0\003\uffb0\065\uffb0\001\002\000\014\003\253\013\256" +
    "\014\252\015\257\016\255\001\002\000\004\067\275\001" +
    "\002\000\006\064\262\071\052\001\002\000\010\002\uffe6" +
    "\003\uffe6\065\uffe6\001\002\000\004\067\271\001\002\000" +
    "\004\067\266\001\002\000\004\067\260\001\002\000\004" +
    "\060\261\001\002\000\006\064\262\071\052\001\002\000" +
    "\014\003\253\013\256\014\252\015\257\016\255\001\002" +
    "\000\010\002\uffe4\003\uffe4\065\uffe4\001\002\000\010\002" +
    "\uffee\003\uffee\065\uffee\001\002\000\010\002\uffef\003\uffef" +
    "\065\uffef\001\002\000\004\060\267\001\002\000\006\064" +
    "\262\071\052\001\002\000\010\002\uffe2\003\uffe2\065\uffe2" +
    "\001\002\000\004\060\272\001\002\000\006\064\262\071" +
    "\052\001\002\000\010\002\uffe3\003\uffe3\065\uffe3\001\002" +
    "\000\010\002\uffe1\003\uffe1\065\uffe1\001\002\000\004\060" +
    "\276\001\002\000\006\064\262\071\052\001\002\000\010" +
    "\002\uffe5\003\uffe5\065\uffe5\001\002\000\010\003\301\011" +
    "\302\012\304\001\002\000\006\064\307\071\052\001\002" +
    "\000\004\067\313\001\002\000\010\002\uffdd\003\uffdd\065" +
    "\uffdd\001\002\000\004\067\305\001\002\000\004\060\306" +
    "\001\002\000\006\064\307\071\052\001\002\000\010\003" +
    "\301\011\302\012\304\001\002\000\010\002\uffec\003\uffec" +
    "\065\uffec\001\002\000\010\002\uffdb\003\uffdb\065\uffdb\001" +
    "\002\000\010\002\uffed\003\uffed\065\uffed\001\002\000\004" +
    "\060\314\001\002\000\006\064\307\071\052\001\002\000" +
    "\010\002\uffdc\003\uffdc\065\uffdc\001\002\000\010\002\uffda" +
    "\003\uffda\065\uffda\001\002\000\004\070\347\001\002\000" +
    "\014\003\323\027\321\030\325\031\324\074\326\001\002" +
    "\000\004\067\344\001\002\000\010\002\uffd1\003\uffd1\065" +
    "\uffd1\001\002\000\006\064\331\071\052\001\002\000\004" +
    "\067\340\001\002\000\004\067\335\001\002\000\004\067" +
    "\327\001\002\000\004\057\330\001\002\000\006\064\331" +
    "\071\052\001\002\000\014\003\323\027\321\030\325\031" +
    "\324\074\326\001\002\000\010\002\uffcf\003\uffcf\065\uffcf" +
    "\001\002\000\010\002\uffd4\003\uffd4\065\uffd4\001\002\000" +
    "\010\002\uffd5\003\uffd5\065\uffd5\001\002\000\004\057\336" +
    "\001\002\000\006\064\331\071\052\001\002\000\010\002" +
    "\uffcd\003\uffcd\065\uffcd\001\002\000\004\060\341\001\002" +
    "\000\006\064\331\071\052\001\002\000\010\002\uffce\003" +
    "\uffce\065\uffce\001\002\000\010\002\uffcc\003\uffcc\065\uffcc" +
    "\001\002\000\004\060\345\001\002\000\006\064\331\071" +
    "\052\001\002\000\010\002\uffd0\003\uffd0\065\uffd0\001\002" +
    "\000\004\026\350\001\002\000\004\067\351\001\002\000" +
    "\004\072\352\001\002\000\004\070\353\001\002\000\014" +
    "\003\ufff6\027\ufff6\030\ufff6\031\ufff6\074\ufff6\001\002\000" +
    "\006\003\357\027\355\001\002\000\004\067\361\001\002" +
    "\000\010\002\uffa6\003\uffa6\065\uffa6\001\002\000\004\071" +
    "\052\001\002\000\010\002\uffa4\003\uffa4\065\uffa4\001\002" +
    "\000\004\057\362\001\002\000\004\071\052\001\002\000" +
    "\010\002\uffa5\003\uffa5\065\uffa5\001\002\000\006\003\366" +
    "\027\365\001\002\000\004\067\371\001\002\000\004\071" +
    "\052\001\002\000\010\002\uffcb\003\uffcb\065\uffcb\001\002" +
    "\000\010\002\uffc9\003\uffc9\065\uffc9\001\002\000\004\060" +
    "\372\001\002\000\004\071\052\001\002\000\010\002\uffca" +
    "\003\uffca\065\uffca\001\002\000\012\003\376\011\377\012" +
    "\u0101\013\u0100\001\002\000\010\002\uffeb\003\uffeb\065\uffeb" +
    "\001\002\000\006\064\u0104\071\052\001\002\000\004\067" +
    "\u010b\001\002\000\004\067\u0108\001\002\000\004\067\u0102" +
    "\001\002\000\004\060\u0103\001\002\000\006\064\u0104\071" +
    "\052\001\002\000\012\003\376\011\377\012\u0101\013\u0100" +
    "\001\002\000\010\002\uffe9\003\uffe9\065\uffe9\001\002\000" +
    "\010\002\ufff0\003\ufff0\065\ufff0\001\002\000\010\002\ufff1" +
    "\003\ufff1\065\ufff1\001\002\000\004\060\u0109\001\002\000" +
    "\006\064\u0104\071\052\001\002\000\010\002\uffe8\003\uffe8" +
    "\065\uffe8\001\002\000\004\060\u010c\001\002\000\006\064" +
    "\u0104\071\052\001\002\000\010\002\uffea\003\uffea\065\uffea" +
    "\001\002\000\010\002\uffe7\003\uffe7\065\uffe7\001\002\000" +
    "\004\006\u0111\001\002\000\006\002\ufffb\065\ufffb\001\002" +
    "\000\004\067\u0112\001\002\000\026\017\ufffe\020\ufffe\021" +
    "\ufffe\022\ufffe\023\ufffe\024\ufffe\025\ufffe\032\ufffe\033\ufffe" +
    "\034\ufffe\001\002\000\032\003\141\027\136\036\134\037" +
    "\131\040\144\041\142\052\130\053\135\054\143\055\137" +
    "\056\140\075\133\001\002\000\010\002\uffa3\003\uffa3\065" +
    "\uffa3\001\002\000\014\003\u0119\027\u0116\030\u0118\031\u011a" +
    "\074\u011b\001\002\000\004\067\u0129\001\002\000\010\002" +
    "\uffc8\003\uffc8\065\uffc8\001\002\000\004\067\u0126\001\002" +
    "\000\006\064\262\071\052\001\002\000\004\067\u0122\001" +
    "\002\000\004\067\u011c\001\002\000\004\057\u011d\001\002" +
    "\000\006\064\u011e\071\052\001\002\000\014\003\u0119\027" +
    "\u0116\030\u0118\031\u011a\074\u011b\001\002\000\010\002\uffc6" +
    "\003\uffc6\065\uffc6\001\002\000\010\002\uffd2\003\uffd2\065" +
    "\uffd2\001\002\000\010\002\uffd3\003\uffd3\065\uffd3\001\002" +
    "\000\004\060\u0123\001\002\000\006\064\u011e\071\052\001" +
    "\002\000\010\002\uffc5\003\uffc5\065\uffc5\001\002\000\010" +
    "\002\uffc3\003\uffc3\065\uffc3\001\002\000\004\057\u0127\001" +
    "\002\000\006\064\u011e\071\052\001\002\000\010\002\uffc4" +
    "\003\uffc4\065\uffc4\001\002\000\004\060\u012a\001\002\000" +
    "\006\064\u011e\071\052\001\002\000\010\002\uffc7\003\uffc7" +
    "\065\uffc7\001\002\000\004\065\u012e\001\002\000\004\002" +
    "\ufffd\001\002\000\004\005\u012f\001\002\000\004\066\u0130" +
    "\001\002\000\004\002\uffff\001\002\000\004\066\u0132\001" +
    "\002\000\006\003\000\065\000\001\002\000\010\002\ufffa" +
    "\003\004\065\u010f\001\002\000\006\002\ufff9\065\ufff9\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0132\000\012\002\005\004\006\005\007\006\010\001" +
    "\001\000\036\012\u0132\016\037\020\036\022\017\024\015" +
    "\026\024\031\016\033\025\034\035\036\031\042\022\044" +
    "\030\046\040\050\033\001\001\000\002\001\001\000\006" +
    "\004\006\006\u012b\001\001\000\036\012\014\016\037\020" +
    "\036\022\017\024\015\026\024\031\016\033\025\034\035" +
    "\036\031\042\022\044\030\046\040\050\033\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\010\u0114\001\001\000\004\011\u0112\001\001\000\006\004" +
    "\006\006\u010f\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\051\373\001\001\000\004\010" +
    "\363\001\001\000\002\001\001\000\004\011\353\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\010\317\001" +
    "\001\000\004\051\277\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\051\250\001\001\000\002\001\001\000" +
    "\004\011\066\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\051\043\001" +
    "\001\000\002\001\001\000\004\023\046\001\001\000\004" +
    "\007\060\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\007\052\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\043\101" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\007" +
    "\125\037\217\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\041\116\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\007\125" +
    "\037\126\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\047\131\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\007\150" +
    "\040\160\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\041\145\001\001\000\006\007\150" +
    "\040\147\001\001\000\004\047\151\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\007\150\040\154\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\007\150\040\157\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\007" +
    "\150\040\163\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\007\150\040\166\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\007\150\040\171\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\007\150\040\174\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\007\150" +
    "\040\177\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\007\150\040\202\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\007\150\040\205\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\007\150\040\210\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\007\125\037" +
    "\213\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\007\125\037\216\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\007\125\037\222\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\007\125\037" +
    "\225\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\007\125\037\230\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\007\125\037\233\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\007\125\037\236\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\007\125\037\241" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\007" +
    "\125\037\244\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\007\125\037\247\001\001\000\002\001\001\000" +
    "\004\021\253\001\001\000\002\001\001\000\006\007\263" +
    "\014\273\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\007\263\014\262\001\001\000\004\021\264\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\007\263\014\267\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\007\263\014\272\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\007\263\014\276\001\001\000\002\001\001\000\004" +
    "\025\302\001\001\000\006\007\307\015\315\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\007\307\015\310\001\001\000\004\025" +
    "\311\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\007\307\015\314\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\032\321\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\007\332\027\342\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\007\332\027\331\001\001\000\004\032\333\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\007\332\027\336\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\007\332\027\341\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\007\332\027\345\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\045\355\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\007\357\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\007\362\001" +
    "\001\000\002\001\001\000\004\052\366\001\001\000\002" +
    "\001\001\000\004\007\367\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\007\372\001\001" +
    "\000\002\001\001\000\004\017\374\001\001\000\002\001" +
    "\001\000\006\007\u0105\013\u010d\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\007\u0105\013\u0104\001\001\000\004\017\u0106\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\007\u0105\013\u0109\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\007\u0105\013\u010c\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\047\u0113\001\001\000\002\001\001\000\004\035\u0116" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\007\263\014\u0124\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\007\u011f\030" +
    "\u011e\001\001\000\004\035\u0120\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\007\u011f\030\u0123\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\007\u011f\030\u0127\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\007\u011f" +
    "\030\u012a\001\001\000\002\001\001\000\004\003\u012c\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\004\006\006\u0133\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$IndigoSyntax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$IndigoSyntax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$IndigoSyntax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



	UserCommands userCommands = new UserCommands();
	FormCommands formCommands = new FormCommands();
	ComponentCommands componentCommands = new ComponentCommands();

	
	/* Getters*/
		public UserCommands getUserCommands(){
			return this.userCommands;
		}
		public FormCommands getFormCommands(){
			return this.formCommands;
		}
		public ComponentCommands getComponentCommands(){
			return this.componentCommands;
		}
	/* End Getters*/


	/* Commands For User */	
		 void startLogin(){
			userCommands.startLogin();
		}
			 void loginUser(String user){
				userCommands.loginUser(user);
			}
			 void loginPassword (String password){
				userCommands.loginPassword(password);
			}
		 void closeLogin(){
			userCommands.closeLogin();
		}
		

		 void startUser(){
			//Close any user before is open
			userCommands.close();
			//Open new user
			userCommands.open();
		}
			 void addUserName(String name){
				userCommands.addUser(name);
			}
			 void addUserPassword(String password){
				userCommands.addPassword(password);

			}
			 void addUserDate(String date){
				try{
					Date actualDate = new SimpleDateFormat("yyyy-MM-dd").parse(date);
					if(userCommands.state()){
						userCommands.addDate(actualDate);
					}
				}catch(Exception ex){
					System.out.println("Error: "+ex.getMessage());
				}
			}
		 void closeUser(){
			userCommands.close();
		}
		 void deleteUser(String ID){
			userCommands.delete(ID);
		}
		 void startModifyUser(){
			userCommands.openModify();
		}
			 void addPastUser(String name){
				userCommands.addPastUser(name);
			}
			 void addNewUser(String name){
				userCommands.addNewUser(name);
			}
			
		 void closeModifyUser(){
			userCommands.closeModify();
		}
			
	/* End Commands for User */

	/* Commands for Form */
		 void deleteForm(String ID){
			formCommands.delete(ID);
		}
		 void startModifyForm(){
			formCommands.openModify();
		}
		 void closeModifyForm(){
			formCommands.closeModify();	
		}
		 void startForm(){
			formCommands.close();
			formCommands.start();	
		}

		 void closeForm(){
			formCommands.close();
		}

			 void addIdForm(String ID){
				formCommands.addId(ID);
			}
			 void addTittleForm(String tittle){
				formCommands.addTittle(tittle);
			}
			 void addNameForm(String name){
				formCommands.addName(name);
			}
			 void addTopicForm(String topic){
				formCommands.addTopic(topic);
			}
	/* End Commands for Form */

	/* COMMANDS FOR COMPONENTS */
		 void deleteComponent(String ID){
			componentCommands.delete(ID);
		}
		 void startModifyComponent(){
			componentCommands.openModify();
		}
		 void closeModifyComponent(){
			componentCommands.closeModify();
		}
		 void startComponent(){
			componentCommands.start();
		}
		 void closeComponent(){
			componentCommands.close();
		}
			 void addIdComponent(String ID){
				componentCommands.addId(ID);
			}
			 void addnCampName(String camp){
				componentCommands.addCampName(camp);
			}
			 void addFormName(String name){
				componentCommands.addFormName(name);
			}
			 void addClassName(String CLASS){
				componentCommands.addClassName(CLASS);
			}
			 
			 void addVisible_Text(String visible){
				componentCommands.addVisibleText(visible);
			}
			 void addAlign(String align){
				componentCommands.addAlign(align);			
			}
			 void addRequired(String required){
				componentCommands.addRequired(required);
			}
			 void addOptions(String options){
				componentCommands.addOptions(options);
			}
			 void addRows(int rows){
				componentCommands.addRows(rows);
			}
			 void addCols(int cols){
				componentCommands.addCols(cols);
			}
			 void addImage(String url){
				componentCommands.addUrl(url);
			}
	/* END COMPONENTS*/

        @Override
	public void syntax_error(Symbol symbol){
		/*if (info instanceof String){
			errors++; 
			System.err.println("  "+ errors + "==> " + info + " "+ message + 
							"\n       Parsing resumed from 2nd token before" + s.current_lexeme()+"\n");
		}
		else {
			StringBuffer m = new StringBuffer("Error ");
			if (info instanceof java_cup.runtime.Symbol) 
			m.append( "("+info.toString()+")" );     
			m.append(" : "+message);   
			System.err.println(m);
		}*/
            report_expected_token_ids();
	    int line = symbol.left;
	    int column = symbol.right;
	    String token = (String) cur_token.value;
	    //We get the production
            String errorArmado="";
            TokenHandler tokenHandler = new TokenHandler();
            for(int index=0; index<expected_token_ids().size() ; index++){
                //We traduce the token to a form that the user might understand
                errorArmado += tokenHandler.expectedFormIndigo(symbl_name_from_id(expected_token_ids().get(index)));
            }
            String error = "Se esperaba la forma: " + errorArmado;
            System.out.println("Error en token:"+token+"\n"+error+" \n Linea: "+line+", Columna: "+column);
	}
	



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$IndigoSyntax$actions {
  private final IndigoSyntax parser;

  /** Constructor */
  CUP$IndigoSyntax$actions(IndigoSyntax parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$IndigoSyntax$do_action_part00000000(
    int                        CUP$IndigoSyntax$act_num,
    java_cup.runtime.lr_parser CUP$IndigoSyntax$parser,
    java.util.Stack            CUP$IndigoSyntax$stack,
    int                        CUP$IndigoSyntax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$IndigoSyntax$result;

      /* select the action based on the action number */
      switch (CUP$IndigoSyntax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= ip EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		RESULT = start_val;
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$IndigoSyntax$parser.done_parsing();
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // sp ::= LESS START GREATER 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("sp",0, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // fp ::= LESS FINAL GREATER 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("fp",1, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // so ::= LESS APERTURE COLON 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("so",2, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ip ::= sp io fp 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("ip",3, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ip ::= io 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("ip",3, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // io ::= so partiture io 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("io",4, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // io ::= 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("io",4, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // io ::= error partiture io 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("io",4, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // initu ::= GREATER OPEN_CURLY CREDENTIAL COLON OPEN_BRACKET OPEN_CURLY 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("initu",39, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-5)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // close ::= CLOSE_CURLY CLOSE_BRACKET CLOSE_CURLY LESS END GREATER 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("close",5, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-5)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // initf ::= GREATER OPEN_CURLY FORM_PARAMETERS COLON OPEN_BRACKET OPEN_CURLY 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("initf",6, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-5)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // initc ::= GREATER OPEN_CURLY C_PARAMETERS COLON OPEN_BRACKET OPEN_CURLY 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("initc",7, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-5)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // partiture ::= keywordu 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("partiture",8, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // partiture ::= keywordf 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("partiture",8, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // partiture ::= keywordc 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("partiture",8, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // gcreate_partiture ::= COMA gcreate_user 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate_partiture",9, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // gcreate_partiture ::= close 
            {
              Object RESULT =null;
		 closeUser(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate_partiture",9, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // gmodify_partiture ::= COMA gmodify_user 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_partiture",10, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // gmodify_partiture ::= close 
            {
              Object RESULT =null;
		 closeModifyUser(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_partiture",10, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // glogin_partiture ::= COMA glogin_user 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("glogin_partiture",11, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // glogin_partiture ::= close 
            {
              Object RESULT =null;
		 closeLogin(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("glogin_partiture",11, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // gcreate ::= CREATE_U initu gcreate_user 
            {
              Object RESULT =null;
		 startUser();
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate",12, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // gcreate_user ::= USER COLON TEXTWIS gcreate_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addUserName(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate_user",13, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // gcreate_user ::= PASSWORD COLON TEXTWIS gcreate_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addUserPassword(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate_user",13, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // gcreate_user ::= DATE COLON TEXTWIS gcreate_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addUserDate(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate_user",13, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // gcreate_user ::= error gcreate_partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreate_user",13, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // gmodify ::= MODIFY_U initu gmodify_user 
            {
              Object RESULT =null;
		 startModifyUser();
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify",14, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // gmodify_user ::= PAST_USER COLON TEXTWIS gmodify_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addPastUser(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_user",15, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // gmodify_user ::= NEW_USER COLON TEXTWIS gmodify_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addNewUser(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_user",15, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // gmodify_user ::= NEW_PASSWORD COLON TEXTWIS gmodify_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addUserPassword(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_user",15, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // gmodify_user ::= DATE COLON TEXTWIS gmodify_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addUserDate(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_user",15, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // gmodify_user ::= error gmodify_partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodify_user",15, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // gdelete ::= DELETE_U initu gdelete_user 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gdelete",16, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // gdelete_user ::= USER COLON TEXTWIS close 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		deleteUser(String.valueOf(text).replace("\"",""));
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gdelete_user",17, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // gdelete_user ::= error close 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gdelete_user",17, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // glogin ::= LOGIN_U initu glogin_user 
            {
              Object RESULT =null;
		startLogin();
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("glogin",18, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // glogin_user ::= USER COLON TEXTWIS glogin_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 loginUser(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("glogin_user",19, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // glogin_user ::= PASSWORD COLON TEXTWIS glogin_partiture 
            {
              Object RESULT =null;
		 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("glogin_user",19, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // glogin_user ::= error glogin_partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("glogin_user",19, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // keywordu ::= gcreate 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordu",20, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // keywordu ::= gmodify 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordu",20, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // keywordu ::= gdelete 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordu",20, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // keywordu ::= glogin 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordu",20, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // gcreatef_partiture ::= COMA gcreatef_form 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_partiture",21, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // gcreatef_partiture ::= close 
            {
              Object RESULT =null;
		 closeForm(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_partiture",21, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // gmodifyf_partiture ::= COMA gmodifyf_form 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_partiture",22, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // gmodifyf_partiture ::= close 
            {
              Object RESULT =null;
		 closeModifyForm(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_partiture",22, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // gcreatef ::= NEW_F initf gcreatef_form 
            {
              Object RESULT =null;
		 startForm(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef",23, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // gcreatef_form ::= ID COLON TEXTWIS gcreatef_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addIdForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_form",24, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // gcreatef_form ::= TITTLE COLON TEXTWS gcreatef_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addTittleForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_form",24, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // gcreatef_form ::= NAME_F COLON TEXTWIS gcreatef_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addNameForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_form",24, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // gcreatef_form ::= TOPIC COLON TEXTWS gcreatef_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addTopicForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_form",24, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // gcreatef_form ::= error gcreatef_partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gcreatef_form",24, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // gdeletef ::= DELETE_F initf gdeletef_form 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gdeletef",25, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // gdeletef_form ::= ID COLON TEXTWIS close 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 deleteForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gdeletef_form",40, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // gdeletef_form ::= error close 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gdeletef_form",40, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // gmodifyf ::= MODIFY_F initf gmodifyf_form 
            {
              Object RESULT =null;
		 startModifyForm(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf",26, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // gmodifyf_form ::= ID COLON TEXTWIS gmodifyf_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addIdForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_form",27, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // gmodifyf_form ::= TITTLE COLON TEXTWS gmodifyf_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addTittleForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_form",27, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // gmodifyf_form ::= NAME_F COLON TEXTWIS gmodifyf_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addNameForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_form",27, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // gmodifyf_form ::= TOPIC COLON TEXTWS gmodifyf_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addTopicForm(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_form",27, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // gmodifyf_form ::= error gmodify_partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("gmodifyf_form",27, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // keywordf ::= gcreatef 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordf",28, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // keywordf ::= gdeletef 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordf",28, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // keywordf ::= gmodifyf 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordf",28, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // modifyc_partiture ::= COMA modifyc_component 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_partiture",30, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // modifyc_partiture ::= close 
            {
              Object RESULT =null;
		 closeModifyComponent(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_partiture",30, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // createc_partiture ::= COMA modifyc_component 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_partiture",29, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // createc_partiture ::= close 
            {
              Object RESULT =null;
		 closeComponent(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_partiture",29, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // classnames ::= TEXT_CAMP 
            {
              Object RESULT =null;
		 RESULT = "TEXT_CAMP"; 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // classnames ::= TEXT_AREA 
            {
              Object RESULT =null;
		 RESULT = "TEXT_AREA" ;
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // classnames ::= CHECKBOX 
            {
              Object RESULT =null;
		 RESULT = "CHECKBOX" ;
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // classnames ::= RATIO 
            {
              Object RESULT =null;
		 RESULT = "RATIO" ;
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // classnames ::= FILE 
            {
              Object RESULT =null;
		 RESULT = "FILE" ;
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // classnames ::= IMAGE 
            {
              Object RESULT =null;
		 RESULT = "IMAGE" ;
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // classnames ::= COMBO 
            {
              Object RESULT =null;
		 RESULT = "COMBO" ;
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // classnames ::= BUTTON 
            {
              Object RESULT =null;
		 RESULT = "BUTTON" ;
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("classnames",31, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // createc ::= ADD_C initc createc_component 
            {
              Object RESULT =null;
		 startComponent(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc",32, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // createc_component ::= ID COLON TEXTWIS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addIdComponent(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // createc_component ::= NAME_C COLON TEXTWS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addnCampName(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // createc_component ::= FORM COLON TEXTWIS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addFormName(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // createc_component ::= CLASS COLON classnames createc_partiture 
            {
              Object RESULT =null;
		int CLASSleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int CLASSright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object CLASS = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addClassName(String.valueOf(CLASS).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // createc_component ::= OPTIONS COLON TEXTWS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addOptions(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // createc_component ::= TEXTV COLON TEXTWS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addVisible_Text(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // createc_component ::= ALIGNMENT COLON POSALIGNMENT createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addAlign(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // createc_component ::= REQUIRED COLON BOOL createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addRequired(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // createc_component ::= ROWS COLON NUMBER createc_partiture 
            {
              Object RESULT =null;
		int numberleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int numberright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object number = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addRows(Integer.parseInt(String.valueOf(number).replace("\"",""))); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // createc_component ::= COLS COLON NUMBER createc_partiture 
            {
              Object RESULT =null;
		int numberleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int numberright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object number = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addCols(Integer.parseInt(String.valueOf(number).replace("\"",""))); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // createc_component ::= URL COLON TEXTWS createc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addImage(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // createc_component ::= error createc_partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("createc_component",33, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // deletec ::= DELETE_C initc deletec_component 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("deletec",34, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // deletec_component ::= ID COLON TEXTWS close 
            {
              Object RESULT =null;
		// deleteComponent(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("deletec_component",35, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // deletec_component ::= error close 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("deletec_component",35, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // modifyc ::= MODIFY_C initc modifyc_component 
            {
              Object RESULT =null;
		 startModifyComponent(); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc",36, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-2)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // modifyc_component ::= ID COLON TEXTWIS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addIdComponent(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // modifyc_component ::= NAME_C COLON TEXTWS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addnCampName(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // modifyc_component ::= FORM COLON TEXTWIS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addFormName(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // modifyc_component ::= CLASS COLON classnames modifyc_partiture 
            {
              Object RESULT =null;
		int CLASSleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int CLASSright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object CLASS = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addClassName(String.valueOf(CLASS).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // modifyc_component ::= OPTIONS COLON TEXTWS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addOptions(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // modifyc_component ::= TEXTV COLON TEXTWS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addVisible_Text(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // modifyc_component ::= ALIGNMENT COLON POSALIGNMENT modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addAlign(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // modifyc_component ::= REQUIRED COLON BOOL modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addRequired(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // modifyc_component ::= ROWS COLON NUMBER modifyc_partiture 
            {
              Object RESULT =null;
		int numberleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int numberright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object number = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addRows(Integer.parseInt(String.valueOf(number).replace("\"",""))); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // modifyc_component ::= COLS COLON NUMBER modifyc_partiture 
            {
              Object RESULT =null;
		int numberleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int numberright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object number = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addCols(Integer.parseInt(String.valueOf(number).replace("\"",""))); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // modifyc_component ::= URL COLON TEXTWS modifyc_partiture 
            {
              Object RESULT =null;
		int textleft = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).left;
		int textright = ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).right;
		Object text = (Object)((java_cup.runtime.Symbol) CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)).value;
		 addImage(String.valueOf(text).replace("\"","")); 
              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-3)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // modifyc_component ::= error modifyc_partiture 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("modifyc_component",37, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.elementAt(CUP$IndigoSyntax$top-1)), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // keywordc ::= createc 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordc",38, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // keywordc ::= deletec 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordc",38, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // keywordc ::= modifyc 
            {
              Object RESULT =null;

              CUP$IndigoSyntax$result = parser.getSymbolFactory().newSymbol("keywordc",38, ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), ((java_cup.runtime.Symbol)CUP$IndigoSyntax$stack.peek()), RESULT);
            }
          return CUP$IndigoSyntax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$IndigoSyntax$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$IndigoSyntax$do_action(
    int                        CUP$IndigoSyntax$act_num,
    java_cup.runtime.lr_parser CUP$IndigoSyntax$parser,
    java.util.Stack            CUP$IndigoSyntax$stack,
    int                        CUP$IndigoSyntax$top)
    throws java.lang.Exception
    {
              return CUP$IndigoSyntax$do_action_part00000000(
                               CUP$IndigoSyntax$act_num,
                               CUP$IndigoSyntax$parser,
                               CUP$IndigoSyntax$stack,
                               CUP$IndigoSyntax$top);
    }
}

}
